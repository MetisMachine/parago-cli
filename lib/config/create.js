"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//
//  create.ts
//  parago
// 
//  Created by Wess Cope (wess@skafos.ai) on 07/18/19
//  Copyright 2019 Skafos, LLC.
//
const path = require("path");
const os = require("os");
const cli_ux_1 = require("cli-ux");
const config_1 = require("../config");
const Env = require("../env");
const SetupPython = () => {
    const py = new Env.Python();
    if (!py.check(">= 3")) {
        console.error("Python version must be: >= 3");
        process.exit(-1);
    }
    py.setup();
};
const ConfigCreate = async (cfg, projectPath = process.cwd(), ask = false) => {
    var config = cfg;
    let basename = path.basename(process.cwd());
    let username = os.userInfo().username;
    let descript = 'A project generated by Parago';
    let vers = '0.0.1';
    let lic = 'MIT';
    let name = ask == false ? basename : await cli_ux_1.default.prompt(`Project name`, { default: basename });
    let description = ask == false ? descript : await cli_ux_1.default.prompt('Project description', { default: descript });
    let version = ask == false ? vers : await cli_ux_1.default.prompt('Version', { default: vers });
    let author = ask == false ? username : await cli_ux_1.default.prompt(`Author`, { default: username });
    let license = ask == false ? lic : await cli_ux_1.default.prompt('License', { default: lic });
    var language = config.system.language;
    config['name'] = name;
    config['description'] = description;
    config['version'] = version;
    config['author'] = author;
    config['license'] = license;
    config['system'] = Object.assign({}, config.system, { language: language });
    cli_ux_1.default.action.start("Creating config file...");
    config_1.default.write(config, projectPath);
    cli_ux_1.default.action.stop();
    if (language.toLowerCase().split(' ').includes('python')) {
        cli_ux_1.default.action.start("Setting up python virtual environment\n");
        SetupPython();
        cli_ux_1.default.action.stop();
    }
};
exports.default = ConfigCreate;
